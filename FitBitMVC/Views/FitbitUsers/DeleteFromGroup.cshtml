@model FitBitMVC.ViewModels.AllUsersGroupsViewModel

@{
    ViewBag.Title = "title";
}
<script>
    $(window).load(function() {
        $('li :checkbox').on('click', function() {
            var $chk = $(this),
                $li = $chk.closest('li'),
                $ul,
                $parent;
            if ($li.has('ul')) {
                $li.find(':checkbox').not(this).prop('checked', this.checked)
            }
            do {
                $ul = $li.parent();
                $parent = $ul.siblings(':checkbox');
                if ($chk.is(':checked')) {
                    $parent.prop('checked', $ul.has(':checkbox:not(:checked)').length == 0);
                } else {
                    $parent.prop('checked', false);
                }
                $chk = $parent;
                $li = $chk.closest('li');
            } while ($ul.is(':not(.someclass)'));
        });
    });
</script>
<h2>Remove users from groups</h2>

@using (Html.BeginForm("DeleteFromGroup", "FitbitUsers", FormMethod.Post))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        @for (int i = 0; i < Model.ListOfAllGroups.Count; i++)
        {
            <ul>
                <li> 
                <input type="checkbox" /> @Html.DisplayFor(model => Model.ListOfAllGroups[i].GroupName)
                @Html.HiddenFor(model => Model.ListOfAllGroups[i].UniqueID)
                @Html.HiddenFor(model => Model.ListOfAllGroups[i].GroupName)

                    @if (Model.ListOfAllGroups[i].Users.Count > 0)
                    {
                        <ul>
                            @for (int j = 0; j < Model.ListOfAllGroups[i].Users.Count; j++)
                            {
                                <li>
                                    @Html.CheckBoxFor(model => Model.ListOfAllGroups[i].Users[j].IsSelected)
                                    @Html.DisplayFor(model => @Model.ListOfAllGroups[i].Users[j].FullName): @Html.DisplayFor(model => @Model.ListOfAllGroups[i].Users[j].Email)
                                    @Html.HiddenFor(model => @Model.ListOfAllGroups[i].Users[j].UniqueID)
                                    @Html.HiddenFor(model => @Model.ListOfAllGroups[i].Users[j].FullName)
                                    @Html.HiddenFor(model => @Model.ListOfAllGroups[i].Users[j].Email)

                                </li>
                            }

                        </ul>
                    }
                    else
                    {
                        <div>There are no users assigned to this group.</div>
                    }
                </li>
            </ul>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.CheckBox("RemoveFromDB")Also Remove selected users from Database
            </div>
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Remove From Groups" class="btn btn-default" onclick=""/>
            </div>
        </div>
    </div>
}